version: '3.2'


networks:
  le_shop_network:
    external: true

services:

  nginx:
    container_name: le_shop_nginx
    image: nginx:latest
    ports:
      - 20080:80
#    environment:
    networks:
      le_shop_network:
        ipv4_address:  130.10.1.2
    volumes:
      - .:/var/www/le_shop
      - ./docker/nginx/le_shop.conf:/etc/nginx/conf.d/le_shop.conf

  php:
#    image: php:8.1-fpm
    container_name: le_shop_php
    ports:
      - 19000:9000
    build:
      context: ./docker/php
    networks:
      le_shop_network:
        ipv4_address: 130.10.1.3
    volumes:
      - .:/var/www/le_shop
    working_dir: /var/www/le_shop

  node:
    container_name: le_shop_node
    image: node:18
    networks:
      le_shop_network:
        ipv4_address: 130.10.1.4
    volumes:
      - ./le_view:/var/www/le_shop/le_view
    working_dir: /var/www/le_shop/le-view


  pgsql:
    container_name: le_shop_pgsql
    image: postgres:13.12
    ports:
      - 15432:5432
    environment:
      - POSTGRES_DB=le_shop
      - POSTGRES_USER=le_shop
      - POSTGRES_PASSWORD=le_shop
      - TZ=GMT+2
      - PGTZ=GMT+2
    networks:
      le_shop_network:
         ipv4_address: 130.10.1.5
    volumes:
      - le_shop_pg_data:/var/lib/postgresql/data:rw
#      - ./docker/postgres/entrypoint/:/docker-entrypoint-initdb.d/ - можемо кидати потрібні ініціалізуючі скрипти

volumes:
  le_shop_pg_data:
    external:
      name: le_shop_pg_data