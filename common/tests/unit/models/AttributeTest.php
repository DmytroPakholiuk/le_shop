<?php

namespace common\tests\unit\models;

use common\fixtures\AttributeDefinitionFixture;
use common\fixtures\CategoryFixture;
use common\fixtures\GoodsAttributeBooleanValueFixture;
use common\fixtures\GoodsAttributeDictionaryDefinitionFixture;
use common\fixtures\GoodsAttributeDictionaryValueFixture;
use common\fixtures\GoodsAttributeFloatValueFixture;
use common\fixtures\GoodsAttributeIntegerValueFixture;
use common\fixtures\GoodsAttributeTextValueFixture;
use common\models\Attribute;
use common\models\Category;
use PHPUnit\Framework\MockObject\MockBuilder;

class AttributeTest extends \Codeception\Test\Unit
{
    /**
     * @var \common\tests\UnitTester
     */
    protected $tester;

    /**
     * @return array
     */
    public function _fixtures()
    {
        return [
            'attributeDefinition' => [
                'class' => AttributeDefinitionFixture::class,
//                'dataFile' => codecept_data_dir() . 'user.php'
            ],
            'category' => [
                'class' => CategoryFixture::class
            ],
            'attributeTextValue' => [
                'class' => GoodsAttributeTextValueFixture::class
            ],
            'attributeIntegerValue' => [
                'class' => GoodsAttributeIntegerValueFixture::class
            ],
            'attributeFloatValue' => [
                'class' => GoodsAttributeFloatValueFixture::class
            ],
            'attributeBooleanValue' => [
                'class' => GoodsAttributeBooleanValueFixture::class
            ],
            'attributeDictionaryValue' => [
                'class' => GoodsAttributeDictionaryValueFixture::class
            ],
            'attributeDictionaryDefinition' => [
                'class' => GoodsAttributeDictionaryDefinitionFixture::class
            ],
        ];
    }

    public function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub
    }

    public function _after()
    {
        parent::_after(); // TODO: Change the autogenerated stub
    }

    public function testGetValueForRootCategory()
    {
        //getting the root category
        $category = Category::findOne(1);
        $attributeDefinitions = Attribute::getAttributesForCategory($category);
        //root category only has its own attributes
        verify($attributeDefinitions)->arrayContainsEquals(Attribute::findOne(1))
            ->arrayNotContainsEquals(Attribute::findOne(4));
    }

    public function testGetValueForChildCategory()
    {
        //getting the child category
        $category = Category::findOne(2);
        $attributeDefinitions = Attribute::getAttributesForCategory($category);
        //the child category has its own attributes as well as parent's
        verify($attributeDefinitions)->arrayContainsEquals(Attribute::findOne(1))
            ->arrayContainsEquals(Attribute::findOne(4));
    }

}